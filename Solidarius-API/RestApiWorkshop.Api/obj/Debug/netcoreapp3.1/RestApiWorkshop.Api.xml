<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RestApiWorkshop.Api</name>
    </assembly>
    <members>
        <member name="M:RestApiWorkshop.Api.Configuration.BasicAuthenticationHandler.#ctor(Microsoft.Extensions.Options.IOptionsMonitor{Microsoft.AspNetCore.Authentication.AuthenticationSchemeOptions},Microsoft.Extensions.Logging.ILoggerFactory,System.Text.Encodings.Web.UrlEncoder,Microsoft.AspNetCore.Authentication.ISystemClock)">
            <inheritdoc />
        </member>
        <member name="M:RestApiWorkshop.Api.Configuration.BasicAuthenticationHandler.HandleAuthenticateAsync">
            <inheritdoc />
        </member>
        <member name="M:RestApiWorkshop.Api.Controllers.BlogController.GetBlog(System.String,System.Int32,System.Int32)">
            <summary>
            Listagem de blogs
            </summary>
            <remarks>
            <para>
            GET /blogs?filter=Eu&amp;skip=10&amp;top=15
            </para>
            <para>
            A razão para essa documentação não ter funcionado anteriormente foi a utilização do E comercial (&amp;) sem sua codificação especial.
            </para>
            <para>
            Você pode utilizar a query desse recurso para filtrar e paginar os resultados de acordo com sua necessidade
            </para>
            </remarks>
            <param name="filter">Filtrar blogs por nome do autor</param>
            <param name="top">Limita a quantidade de registros</param>
            <param name="skip">Pula a quantidade de registros</param>
            <returns></returns>
        </member>
        <member name="M:RestApiWorkshop.Api.Controllers.BlogController.GetBlog(System.Int32)">
            <summary>
            Pega um blog específico
            </summary>
            <remarks>
                GET /blogs/1234
            </remarks>
            <param name="id">Identificação do Blog</param>
            <returns></returns>
        </member>
        <member name="M:RestApiWorkshop.Api.Controllers.BlogController.PostBlog(RestApiWorkshop.Api.TransferObjects.BlogDto)">
            <summary>
            Cria um blog na coleção
            </summary>
            <remarks>
                POST /blogs
            </remarks>
            <param name="blog">Dados do blog</param>
            <returns></returns>
        </member>
        <member name="M:RestApiWorkshop.Api.Controllers.BlogController.PutBlog(System.Int32,RestApiWorkshop.Api.TransferObjects.BlogDto)">
            <summary>
            Atualiza um blog
            </summary>
            <remarks>
            </remarks>
            <param name="id">Identificação do blog</param>
            <param name="blog">Dados do blog</param>
            <returns></returns>
        </member>
        <member name="M:RestApiWorkshop.Api.Controllers.BlogController.DeleteBlog(System.Int32)">
            <summary>
            Remove um blog
            </summary>
            <param name="id">Identificação do blog</param>
            <returns></returns>
        </member>
        <member name="T:RestApiWorkshop.Api.TransferObjects.AuthorDto">
            <summary>
            Entidade Autor. Representa um autor de blogs.
            </summary>
        </member>
        <member name="P:RestApiWorkshop.Api.TransferObjects.AuthorDto.Name">
            <summary>
            Nome todo do autor
            </summary>
        </member>
    </members>
</doc>
